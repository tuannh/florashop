@model FloraShop.Web.Models.UserModel

@{
    Layout = "~/Views/Layouts/Content.cshtml";
    ViewBag.Title = "Thông tin cá nhân";

    var genders = new List<SelectListItem>()
    {
        new SelectListItem() {  Text= "--------" },
        new SelectListItem() { Value = "1", Text= "Nam" },
        new SelectListItem() { Value = "2", Text= "Nữ" }
    };
}

<div class="title-big">Thông tin cá nhân</div>
<div class="error">
    @ViewBag.Message
</div>

<div class="info-detail">
    <form method="post" action="/user/edit">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <p>
            <label>&nbsp;</label>
            <b>Thông tin tài khoản</b>
        </p>

        <p>
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </p>

        <p>
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </p>

        <p>
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </p>

        <p>
            <label>&nbsp;</label>
            <b>Thông tin giao hàng</b>
        </p>

        <p>
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </p>

        <p>
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
        </p>

        <p>
            @Html.LabelFor(model => model.Cellphone, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Cellphone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cellphone, "", new { @class = "text-danger" })
        </p>

        <p>

            @Html.LabelFor(model => model.Telphone, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Telphone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Telphone, "", new { @class = "text-danger" })
        </p>

        <p>
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </p>

        <p>
            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
        </p>

        <p>
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownListFor(model => model.Gender, genders, new { @class = "user-gender" })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </p>

        <p>
            @Html.LabelFor(model => model.ProvinceId, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownList("ProvinceId", null, new { @class = "ddl-province" })
            @Html.ValidationMessageFor(model => model.ProvinceId, "", new { @class = "text-danger" })
        </p>

        <p>
            @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownList("DistrictId", null, new { @class = "ddl-district" })
            @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })
        </p>

        <p>
            <input type="submit" value="Cập nhật" class="btnDatHang" />
        </p>
    </form>
</div>

<script type="text/javascript">
    $(document).ready(function () {

        var config = {
            changeMonth: true,
            duration: 'fast',
            changeYear: true,
            numberOfMonths: 1,
            selectOtherMonths: true,
            showOtherMonths: true,
            firstDay: 1,
            dayNames: ['CN', 'Thứ 2', 'Thứ 3', 'Thứ 4', 'Thứ 5', 'Thứ 6', 'Thứ 7'],
            monthNamesShort: ['Thg 1', 'Thg 2', 'Thg 3', 'Thg 4', 'Thg 5', 'Thg 6', 'Thg 7', 'Thg 8', 'Thg 9', 'Thg 10', 'Thg 11', 'Thg 12'],
            yearRange: '1902:@(DateTime.Now.Year-10)',
            dateFormat: 'dd/mm/yy'
        };

        $('#Birthday').datepicker(config);

        $('.username').blur(function () {
            var data = { username: $(this).val() };
            $.post("/flora/validuser", data, function (data) {

                $('#btnRegister').attr('disabled', data.valid == 0);

                if (data.valid == 0) {
                    $('#username-error').html('Tên đăng nhập tồn tại');
                    $('#btnRegister').addClass('btn-disable');
                }
                else {
                    $('#username-error').html('');
                    $('#btnRegister').removeClass('btn-disable');
                }

            });
        })

        $('.ddl-province').change(function () {
            var id = $(this).val();
            var data = { provinceId: id };
            $.post("/cart/district", data, loadCompelete);
        })
    })

    function loadCompelete(data) {
        $('.ddl-district').html(data.data);
    }
</script>


@section Styles{
    @Html.CssBundle("~/css/content")
    @Html.CssBundle("~/css/jquery-ui", "~/Css/jquery/jquery-ui.css")
}

@section FooterScripts    {
    @Html.JsBundle("~/js/jqueryval")
    @Html.JsBundle("~/js/user/register", "~/Scripts/jquery/jquery-ui.js")
}
