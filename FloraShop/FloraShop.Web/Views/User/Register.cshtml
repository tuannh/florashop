@model FloraShop.Web.Models.RegisterModel

@{
    Layout = "~/Views/Layouts/Content.cshtml";
    ViewBag.Title = "Đăng ký";

    var genders = new List<SelectListItem>()
    {
        new SelectListItem() {  Text= "--------" },
        new SelectListItem() { Value = "1", Text= "Nam" },
        new SelectListItem() { Value = "2", Text= "Nữ" }
    };
}

<div class="title-big">Đăng ký</div>
<div class="error">
    @ViewBag.Message
</div>


<div class="info-detail">
    <form method="post" action="/user/register/">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <p>
            <label>&nbsp;</label>
            <b>Thông tin tài khoản</b>
        </p>

        <p>
            @Html.LabelFor(model => model.Username)
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "username" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "username-error" })
            <span id="username-error" class="field-validation-error"></span>
        </p>

        <p>
            @Html.LabelFor(model => model.Password)
            @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </p>

        <p>
            @Html.LabelFor(model => model.ConfirmPassword)
            @Html.PasswordFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </p>

        <p>
            <label>&nbsp;</label>
            <b>Thông tin khách hàng</b>
        </p>

        <p>
            @Html.LabelFor(model => model.FullName)
            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
        </p>

        <p>
            @Html.LabelFor(model => model.Email)
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </p>

        <p>
            @Html.LabelFor(model => model.Birthday)
            @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "user-birthday", placeholder = "dd/MM/yyyy" } })
            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
        </p>

        <p>
            @Html.LabelFor(model => model.Gender)
            @Html.DropDownListFor(model => model.Gender, genders, new { @class = "user-gender" })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </p>

        <p>
            <input id="btnRegister" type="submit" value="Đăng ký" class="btnDatHang" />
        </p>
    </form>
</div>

<script type="text/javascript">
    $(document).ready(function () {

        var config = {
            changeMonth: true,
            duration: 'fast',
            changeYear: true,
            numberOfMonths: 1,
            selectOtherMonths: true,
            showOtherMonths: true,
            firstDay: 1,
            dayNames: ['CN', 'Thứ 2', 'Thứ 3', 'Thứ 4', 'Thứ 5', 'Thứ 6', 'Thứ 7'],
            monthNamesShort: ['Thg 1', 'Thg 2', 'Thg 3', 'Thg 4', 'Thg 5', 'Thg 6', 'Thg 7', 'Thg 8', 'Thg 9', 'Thg 10', 'Thg 11', 'Thg 12'],
            yearRange: '1902:@(DateTime.Now.Year-10)',
            dateFormat: 'dd/mm/yy'
        };

        $('#Birthday').datepicker(config);

        $('.username').blur(function () {
            var data = { username: $(this).val() };
            $.post("/flora/validuser", data, function (data) {

                $('#btnRegister').attr('disabled', data.valid == 0);

                if (data.valid == 0) {
                    $('#username-error').html('Tên đăng nhập tồn tại');
                    $('#btnRegister').addClass('btn-disable');
                }
                else {
                    $('#username-error').html('');
                    $('#btnRegister').removeClass('btn-disable');
                }

            });
        })
    })
</script>


@section Styles{
    @Html.CssBundle("~/css/content")
    @Html.CssBundle("~/css/jquery-ui", "~/Css/jquery/jquery-ui.css")
}

@section FooterScripts    {
    @Html.JsBundle("~/js/jqueryval")
    @Html.JsBundle("~/js/user/register", "~/Scripts/jquery/jquery-ui.js")
}
