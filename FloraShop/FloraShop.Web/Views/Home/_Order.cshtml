@model FloraShop.Core.Domain.Order

@{
    var provinces = ViewData["Provinces"] as List<SelectListItem>;
    var hasStatus = FloraShop.Core.SiteContext.Current.QueryString["status"];

    var orderSessionId = FloraShop.Core.SiteContext.Current.QueryString["order"] ?? "order";
    var orderInfo = FloraShop.Core.SiteContext.Current.Context.Session[orderSessionId] as string;
}

<div class="title-big">Thông tin<br /> &nbsp;&nbsp; đặt hàng</div>

<div class="info-detail">
    @if (!string.IsNullOrEmpty(orderInfo))
    {
        @Html.Raw(orderInfo)
    }
    else
    {
        <form method="post" action="/dat-hang/submit">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <p>
                @Html.LabelFor(model => model.CustomerName)
                @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
            </p>

            <p>
                @Html.LabelFor(model => model.Phone)
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </p>

            <p>
                @Html.LabelFor(model => model.Email)
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </p>

            <p>
                @Html.LabelFor(model => model.Address)
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </p>

            <p>
                @Html.LabelFor(model => model.ProvinceId)
                @Html.DropDownListFor(model => model.ProvinceId, provinces, new { @class = "ddl-province" })
                @Html.ValidationMessageFor(model => model.ProvinceId, "", new { @class = "text-danger" })
            </p>

            <p>
                @Html.LabelFor(model => model.DistrictId)
                <select id="DistrictId" name="DistrictId" class="ddl-district">
                    <option value="0">Chọn quận/huyện</option>
                </select>
            </p>

            <p>
                @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "order-note" })
                @Html.TextAreaFor(model => model.Note, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </p>

            <p>
                <input type="submit" value="Đặt hàng" class="btnDatHang" />
            </p>
        </form>

        <script type="text/javascript">
            $(document).ready(function () {
                $('.ddl-province').change(function () {
                    var id = $(this).val();
                    var data = { provinceId: id };
                    $.post("/flora/district", data, loadCompelete);
                })
            })

            function loadCompelete(data) {
                $('.ddl-district').html(data.data);
            }
        </script>
    }
</div>