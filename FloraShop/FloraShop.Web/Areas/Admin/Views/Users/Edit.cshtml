@model FloraShop.Core.Domain.User

@{
    ViewBag.Title = "Cập nhật user";
    Layout = "~/Areas/Admin/Views/Shared/Layouts/Edit.cshtml";

    var genders = new List<SelectListItem>()
    {
        new SelectListItem() {  Text= "--------" },
        new SelectListItem() { Value = "1", Text= "Nam" },
        new SelectListItem() { Value = "2", Text= "Nữ" }
    };

    var birthday = Model.Birthday.HasValue ? Model.Birthday.Value.ToString("dd/MM/yyyy") : "";
}

<h2>Cập nhật user</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="error">
        @ViewBag.Error
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>

    <div class="form-horizontal">
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @readonly = "true", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Active)
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cellphone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cellphone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cellphone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telphone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telphone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telphone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("userbirthday")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Gender, genders, new { @class = "user-gender" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProvinceId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProvinceId", null, htmlAttributes: new { @class = "ddl-province" })
                @Html.ValidationMessageFor(model => model.ProvinceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DistrictId", null, new { @class = "ddl-district" })
                @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label>&nbsp;</label>
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Cập nhật" class="btnAdd" />
                <input type="button" value="Xóa" class="btnDelete" data-href="/admin/users/delete/@Model.Id" />
                <input type="reset" value="Reset" class="btnCancel" />
                <input type="button" value="Bỏ qua" class="btnCancel btnDiscard" data-href="/admin/users/" />
            </div>
        </div>

    </div>
}

<script type="text/javascript">
    $(document).ready(function () {

        var config = {
            changeMonth: true,
            duration: 'fast',
            changeYear: true,
            numberOfMonths: 1,
            selectOtherMonths: true,
            showOtherMonths: true,
            firstDay: 1,
            dayNames: ['CN', 'Thứ 2', 'Thứ 3', 'Thứ 4', 'Thứ 5', 'Thứ 6', 'Thứ 7'],
            monthNamesShort: ['Thg 1', 'Thg 2', 'Thg 3', 'Thg 4', 'Thg 5', 'Thg 6', 'Thg 7', 'Thg 8', 'Thg 9', 'Thg 10', 'Thg 11', 'Thg 12'],
            yearRange: '1902:@(DateTime.Now.Year-10)',
            dateFormat: 'dd/mm/yy'
        };

        $('#userbirthday').val('@birthday').attr('placeholder', 'dd/MM/yyyy');
        $('#userbirthday').datepicker(config);

        $('.btnDelete').click(function () {
            var ok = confirm('Bạn muốn xóa user này không?')
            if (ok)
                location.href = $(this).attr('data-href');

            return false;
        })

        $('.btnDiscard').click(function () {
            location.href = $(this).attr('data-href');
        })

        $('.ddl-province').change(function () {
            var id = $(this).val();
            var data = { provinceId: id };
            $.post("/cart/district", data, loadCompelete);
        })
    })

    function loadCompelete(data) {
        $('.ddl-district').html(data.data);
    }
</script>

@section Styles{
    @Html.CssBundle("~/css/jquery-ui", "~/Css/jquery/jquery-ui.css")
}

@section FooterScripts    {
    @Html.JsBundle("~/js/user/register", "~/Scripts/jquery/jquery-ui.js")
}
